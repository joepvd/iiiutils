#!/usr/bin/env bash
# summon-slack: Script to plop the slack app in and out of view in i3wm
# Usage:
#   summon-slack
# It will:
# - start the slack app if there is no window with class "Slack"
# - send the slack app to default workspace if it is focused
# - else bring slack app to current workspace and focus
# Configure by setting NOTES_MARK and NOTES_CMD in the script
# To bind it to the key F10, ensure this is in your $PATH, and set the following
# in your i3 config file:
#   bindsym F10 exec --no-startup-id note
# https://github.com/joepvd/iiiutils

set -euo pipefail

DEFAULT_SLACK_WS=inbox

main() {
  if (( $# > 0 )); then
    halp
    exit 0
  fi

  if ! window_exists; then
    launch
  elif slack_focused; then
    move_to_default
  else
    slack_here
  fi
}

window_exists() {
  i3-msg -t get_tree |
    jq --exit-status '
      recurse(.nodes[]) |
        select(.window_properties.class == "Slack")
    ' >/dev/null 2>&1
}

launch() {
  i3-msg exec -- gtk-launch slack 2>/dev/null
}

slack_focused() {
  i3-msg -t get_tree |
    jq --exit-status '
      recurse(.nodes[])
        | select(.window_properties.class == "Slack")
        | select(.focused)
    '
}

move_to_default() {
  cmd="[class=Slack] move workspace $DEFAULT_SLACK_WS"
  if [[ "$DEFAULT_SLACK_WS" == scratchpad ]]; then
    cmd="[class=Slack] move scratchpad"
  fi
  i3-msg "$cmd"

}

slack_here() {
  i3-msg "
    [class=Slack] move workspace $(focused_ws)
    [class=Slack] focus
  " 2>/dev/null
}

focused_ws() {
  i3-msg -t get_workspaces |
    jq --exit-status --raw-output '
      .[]
      | select(.focused)
      | if (.num < 0)
        then .name
        else @text "number \(.num)"
        end
    ' 2>/dev/null
}

halp() {
  sed -n 's/^# //p' "$0"
}

main "$@"
